version: "3.9"
services:
    redis:
        image: redis
        container_name: redis
        ports:
            - 6379:6379
        command:
            redis-server
        networks:
            - webnet
    mongodb:
        image: mongo:5.0
        ports:
            - '27017:27017'
        networks:
            - webnet
    zookeeper-1:
        image: confluentinc/cp-zookeeper:3.3.0-1
        hostname: zookeeper-1
        ports:
            - "12181:12181"
        environment:
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_CLIENT_PORT: 12181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_INIT_LIMIT: 5
            ZOOKEEPER_SYNC_LIMIT: 2
            ZOOKEEPER_SERVERS: zookeeper-1:12888:13888
        networks:
            - webnet
    kafka-1:
        image: confluentinc/cp-kafka:4.1.2-2
        hostname: kafka-1
        ports:
            - "19092:19092"
        depends_on:
            - zookeeper-1
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092
            KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        networks:
            - webnet
    db:
        build: ./db/
        image: bhavan/transportation-db
        container_name: database
        ports:
            - 5003:5003
        links:
            - mongodb
        networks:
            - webnet
    backend:
        build: ./backend/
        image: bhavan/transportation-backend
        container_name: backend
        restart: always
        ports:
            - 5000:5000
        links:
            - mongodb
        networks:
            - webnet
    broker1:
        build: 
            context: ./broker/
            args:
                PORT: 7001
        image: bhavan/transportation-broker1
        container_name: broker1
        restart: always
        ports:
            - 7001:7001
        depends_on:
            - redis
        environment:
            - redis-host=redis
            - host-port=7001
        networks:
            - webnet
    broker2:
        build: 
            context: ./broker/
            args:
                PORT: 7002
        image: bhavan/transportation-broker2
        container_name: broker2
        restart: always
        ports:
            - 7002:7002
        depends_on:
            - redis
        environment:
            - redis-host=redis
            - host-port=7002
        networks:
            - webnet
    broker3:
        build: 
            context: ./broker/
            args:
                PORT: 7003
        image: bhavan/transportation-broker3
        container_name: broker3
        restart: always
        ports:
            - 7003:7003
        depends_on:
            - redis
        environment:
            - redis-host=redis
            - host-port=7003
        networks:
            - webnet
    publisher1:
        build: ./publisher1/
        image: bhavan/transportation-publisher1
        container_name: publisher1
        restart: always
        ports:
            - 6001:6001
        links:
            - mongodb
        networks:
            - webnet
    publisher2:
        build: ./publisher2/
        image: bhavan/transportation-publisher2
        container_name: publisher2
        restart: always
        ports:
            - 6002:6002
        links:
            - mongodb
        networks:
            - webnet
    publisher3:
        build: ./publisher3/
        image: bhavan/transportation-publisher3
        container_name: publisher3
        restart: always
        ports:
            - 6003:6003
        links:
            - mongodb
        networks:
            - webnet
    subscriber1:
        build: ./subscriber/
        image: bhavan/transportation-subscriber1
        container_name: subscriber1
        restart: always
        ports:
            - 9001:9001
        depends_on:
            - redis
        environment:
            - host-port=9001
        networks:
            - webnet
    subscriber2:
        build: ./subscriber/
        image: bhavan/transportation-subscriber2
        container_name: subscriber2
        restart: always
        ports:
            - 9002:9002
        depends_on:
            - redis
        environment:
            - host-port=9002
        networks:
            - webnet
    subscriber3:
        build: ./subscriber/
        image: bhavan/transportation-subscriber3
        container_name: subscriber3
        restart: always
        ports:
            - 9003:9003
        depends_on:
            - redis
        environment:
            - host-port=9003
        networks:
            - webnet
    frontend:
        build: ./client/
        image: bhavan/transportation-client
        container_name: frontend
        restart: always
        ports:
            - 8080:8080
        expose:
            - "8080"

networks:
    webnet:
        driver: bridge